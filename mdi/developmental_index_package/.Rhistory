rm(list = ls())
setwd('C:\\Users\\Ben\OneDrive - Duke University\\bilbo_lab\\microglia-seq_website\\microglia-seq\\mdi\\developmental_index_package')
library(tidyverse)
library(ggpubr)
library(reshape2)
library(ggbeeswarm)
library(car)
library(outliers)
library(plotly)
library(ungeviz)
library(outliers)
library(rstatix)
library(readxl)
### defining necessary functions for calculating ddCT and SEM ###
ddct <- function(x, ref) 2^(x - ref)
sem <- function(x) sqrt(var(x)/length(x))
is_outlier <- function(x) { return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x)) }
z <- theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 50, family = 'sans'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
legend.title = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1, size = 25),
plot.title = element_text(hjust = 0.5))
df <- read.csv("mupet_base_stats_2msec.csv")
df <- read.csv("calculated_index_compared.csv")
df[is.na(df)] <- 0
df <- read.csv("calculated_index_compared.csv")
setwd('C:\\Users\\Ben\OneDrive - Duke University\\bilbo_lab\\microglia-seq_website\\microglia-seq\\mdi\\developmental_index_package')
setwd("C:\\Users\\Ben\OneDrive - Duke University\\bilbo_lab\\microglia-seq_website\\microglia-seq\\mdi\\developmental_index_package")
setwd("C:\\Users\\Ben\\OneDrive - Duke University\\bilbo_lab\\microglia-seq_website\\microglia-seq\\mdi\\developmental_index_package")
df <- read.csv("calculated_index_compared.csv")
df[is.na(df)] <- 0
View(df)
View(df)
ggplot(df, aes(x = age, y = scaled_index, color = sex))+
geom_point()
View(df)
ggplot(df, aes(x = level_0, y = scaled_index, color = sex))+
geom_point()
View(df)
ggplot(df, aes(x = level_0, y = scaled_index, color = level_1))+
geom_point()
ggplot(df, aes(x = level_0, y = scaled_index, color = level_1))+
geom_point()+
z
ggplot(df, aes(x = interaction(level_0, level_1), y = scaled_index, color = level_1))+
geom_point()+
z
ggplot(df, aes(x = interaction(level_0, level_1), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2)+
z
df$level_0 <- factor(df$level_0, levels = c('E18', 'P4', 'P14', 'P60','P60 + LPS'))
df$level_1 <- factor(df$level_1, levels = c('Male', 'Female'))
ggplot(df, aes(x = interaction(level_0, level_1), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2)+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2)+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')
ggplot(df, aes(x = interaction(level_1, level_0), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
z
View(df)
ggplot(df, aes(x = interaction(level_1, level_0), y = unscaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
ylab('')+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = unscaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
ylab('')+
ggtitle('Unscaled Index')+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = unscaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
ylab('')+
ggtitle('Unscaled Index/r/n')+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = unscaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
ylab('')+
ggtitle('Unscaled Index\r\n')+
z
ggplot(df, aes(x = interaction(level_1, level_0), y = scaled_index, color = level_1))+
geom_quasirandom(width = 0.2, size = 3)+
xlab('')+
ylab('')+
ggtitle('Scaled Index\r\n')+
z

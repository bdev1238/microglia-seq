ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
goi = 'Il34'
searched_gene <- df[df['gene'] == goi, ]
searched_gene_grouped <- df_grouped[df_grouped['gene'] == goi, ]
#reordering the x labels such that they are in chronological order
searched_gene$age <- factor(searched_gene$age, levels = c('E18', 'P4', 'P14', 'P60','P60 + LPS'))
searched_gene$sex <- factor(searched_gene$sex, levels = c('Male', 'Female'))
searched_gene_grouped$age <- factor(searched_gene_grouped$age, levels = c('E18', 'P4', 'P14', 'P60','P60 + LPS'))
searched_gene_grouped$sex <- factor(searched_gene_grouped$sex, levels = c('Male', 'Female'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_bar(stat = 'identity', data = searched_gene_grouped, position = position_dodge(.9))+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.7, shape = 21)+
geom_errorbar(data = searched_gene_grouped, aes(ymin = expression-sem, ymax = expression + sem), width = 0.2, position=position_dodge(.9))+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black')
rect = element_rect(fill = 'transparent'),
text = element_text(size = 40),
legend.key.size = unit(2, 'cm'),
legend.title = element_blank(),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 50, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="black", fill="transparent", size=1.5, linetype="solid"),
panel.border = element_rect(color = 'black'),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black')
rect = element_rect(fill = 'transparent'),
text = element_text(size = 40),
legend.key.size = unit(2, 'cm'),
legend.title = element_blank(),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 50, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="black", fill="transparent", size=1.5, linetype="solid"),
panel.border = element_rect(color = 'black'),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 18, color = 'black'),
rect = element_rect(fill = 'transparent'),
text = element_text(size = 40),
legend.key.size = unit(2, 'cm'),
legend.title = element_blank(),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 50, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="black", fill="transparent", size=1.5, linetype="solid"),
panel.border = element_rect(color = 'black'),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 40, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0), angle = 45),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.ticks.x = element_text(angle = 45)
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.ticks.x = element_text(angle = 45),
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45),
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'None',
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
legend.title = element_text(names = 'Sex')
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'))
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
legend.title = element_text(names = 'Sex')
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_manual(values = c('#8c96c6','#88419d'), name = 'Sex')
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
legend.title = element_text(names = 'Sex')
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_discrete(values = c('#8c96c6','#88419d'), name = 'Sex')
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
legend.title = element_text(names = 'Sex'),
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_discrete(values = c('#8c96c6','#88419d'), name = 'Sex')
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_discrete(values = c('#8c96c6','#88419d'), name = 'Sex')
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_violin(trim = FALSE)+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.9)+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_discrete(name = 'Sex')
ggplot(searched_gene, aes(age, expression, fill = sex))+
geom_bar(stat = 'identity', data = searched_gene_grouped, position = position_dodge(.9))+
geom_jitter(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.9), color = 'black', alpha = 0.7, shape = 21)+
geom_errorbar(data = searched_gene_grouped, aes(ymin = expression-sem, ymax = expression + sem), width = 0.2, position=position_dodge(.9))+
labs(title = paste(goi, 'Expression'), align = 'center')+
xlab('Age/Treatment')+
ylab('Average Expression')+
theme_classic()+
theme(rect = element_rect(fill = 'transparent'),
text = element_text(size = 35, face = 'bold'),
axis.line = element_line(size = 2.5),
axis.ticks = element_line(size = 1.7),
axis.ticks.length = unit(.5, 'cm'),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(color = NA, col = 0),  # get rid of legend bg and outline
axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),
strip.background = element_rect(color="transparent", fill="transparent", size=5, linetype="solid"),
panel.spacing = unit(1, 'cm'))+
scale_fill_discrete(name = 'Sex')
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/protocols/r_scripts/microglia-seq_shiny_app/shiny_app_1.R')
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/protocols/r_scripts/microglia-seq_shiny_app/shiny_app_1.R')
install.packages("shinythemes")
remotes::install_github("rstudio/bootstraplib")
install.packages("remotes")
remotes::install_github("rstudio/bootstraplib")
install.packages("DT")
bs_theme_preview()
library(bootstraplib)
remotes::install_github("rstudio/bootstraplib")
bs_themw_new()
bs_theme_new
bs_theme_new()
library(boot)
bs_theme_new()
remotes::install_github("rstudio/shiny")
library(glue)
remove.packages("glue", lib="~/R/win-library/3.6")
remotes::install_github("rstudio/shiny")
library(bootstraplib)
bs_theme_preview()
install.packages("sf")
bs_theme_preview()
bs_theme_new(bootswatch = "sketchy")
bs_theme_preview()
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
runApp()
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
runApp()
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
runApp()
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
shiny::runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
library(bootstraplib)
install.packages("glue")
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
library(shiny)
runApp('C:/Users/Ben/Dropbox/bilbo_lab_spr2020/microglia-seq_website/microglia-seq/shiny-app_200507')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
